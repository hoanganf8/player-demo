{"mappings":"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","sources":["<anon>","js/script.js"],"sourcesContent":["var progressBar = document.querySelector(\".progress-bar\");\nvar progress = progressBar.querySelector(\".progress\");\nvar progressDot = progress.querySelector(\"span\");\nvar progressBarWidth = progressBar.clientWidth;\nvar timer = progressBar.querySelector(\".timer\");\nvar isDrag = false;\nvar initialClientX = 0;\nvar initalRate = 0;\nvar rate = 0;\nprogressBar.addEventListener(\"mousedown\", function(e) {\n    if (e.which === 1) {\n        //   console.log(e.offsetX, progressBarWidth);\n        //Tính tỷ lệ phần trăm giữa vị trí click với chiều rộng\n        rate = e.offsetX * 100 / progressBarWidth;\n        //Update CSS vào progress\n        progress.style.width = `${rate}%`;\n        initalRate = rate;\n        isDrag = true;\n        initialClientX = e.clientX;\n        var currentTime = audio.duration * rate / 100;\n        currentTimeEl.innerText = getTime(currentTime);\n        audio.currentTime = currentTime;\n    }\n});\nprogressDot.addEventListener(\"mousedown\", function(e) {\n    e.stopPropagation();\n    if (e.which === 1) {\n        isDrag = true;\n        initialClientX = e.clientX;\n    //   console.log(initalRate);\n    //   console.log(\"progress dot\");\n    }\n});\ndocument.addEventListener(\"mousemove\", function(e) {\n    if (isDrag) {\n        var space = e.clientX - initialClientX;\n        // console.log(space);\n        rate = space * 100 / progressBarWidth + initalRate;\n        if (rate < 0) rate = 0;\n        if (rate > 100) rate = 100;\n        progress.style.width = `${rate}%`;\n        var currentTime = audio.duration * rate / 100;\n        currentTimeEl.innerText = getTime(currentTime);\n    }\n});\ndocument.addEventListener(\"mouseup\", function() {\n    isDrag = false;\n    initalRate = rate;\n    var currentTime = audio.duration * rate / 100;\n    currentTimeEl.innerText = getTime(currentTime);\n    audio.currentTime = currentTime;\n});\n/*\r\nKhi bấm chuột xuống vào chấm màu tím\r\n- Lấy được clientX tại ví trí bấm chuột\r\n\r\nKhi kéo chuột\r\n- Lấy được clientX ở vị trí gần nhất (kéo đến đâu lấy vị trí ở đó)\r\n- Tính khoảng cách kéo: clientX mới nhất - clientX ban đầu khi click\r\n*/ var audio = document.querySelector(\".audio\");\nvar currentTimeEl = progressBar.previousElementSibling;\nvar durationTimeEl = progressBar.nextElementSibling;\nvar playBtn = document.querySelector(\".play-btn\");\nvar playIcon = `<i class=\"fa-solid fa-play\"></i>`;\nvar pauseIcon = `<i class=\"fa-solid fa-pause\"></i>`;\nvar getTime = function(seconds) {\n    var mins = Math.floor(seconds / 60);\n    seconds = Math.floor(seconds - mins * 60);\n    return `${mins < 10 ? \"0\" + mins : mins}:${seconds < 10 ? \"0\" + seconds : seconds}`;\n};\naudio.addEventListener(\"loadeddata\", function() {\n    //   console.log(audio.duration);\n    durationTimeEl.innerText = getTime(audio.duration);\n});\nplayBtn.addEventListener(\"click\", function(e) {\n    e.stopPropagation();\n    if (audio.paused) {\n        audio.play();\n        this.innerHTML = pauseIcon;\n    } else {\n        audio.pause();\n        this.innerHTML = playIcon;\n    }\n});\naudio.addEventListener(\"timeupdate\", function() {\n    if (!isDrag) {\n        //   console.log(\"đang chạy: \", this.currentTime);\n        currentTimeEl.innerText = getTime(this.currentTime);\n        //Tính tỷ lệ phần trăm\n        rate = this.currentTime / this.duration * 100;\n        //Update vào timer\n        progress.style.width = `${rate}%`;\n    }\n});\naudio.addEventListener(\"ended\", function() {\n    rate = 0;\n    audio.currentTime = 0;\n    progress.style.width = 0;\n    playBtn.innerHTML = playIcon;\n});\nprogressDot.addEventListener(\"mousemove\", function(e) {\n    e.stopPropagation();\n});\nprogressBar.addEventListener(\"mousemove\", function(e) {\n    timer.style.display = \"block\";\n    timer.style.left = `${e.offsetX}px`;\n    var rate = e.offsetX * 100 / this.clientWidth;\n    var currentTime = audio.duration * rate / 100;\n    timer.innerText = getTime(currentTime);\n});\nprogressBar.addEventListener(\"mouseout\", function() {\n    timer.style.display = \"none\";\n});\n\n//# sourceMappingURL=index.572545a4.js.map\n","var progressBar = document.querySelector(\".progress-bar\");\r\n\r\nvar progress = progressBar.querySelector(\".progress\");\r\n\r\nvar progressDot = progress.querySelector(\"span\");\r\n\r\nvar progressBarWidth = progressBar.clientWidth;\r\n\r\nvar timer = progressBar.querySelector(\".timer\");\r\n\r\nvar isDrag = false;\r\nvar initialClientX = 0;\r\nvar initalRate = 0;\r\nvar rate = 0;\r\n\r\nprogressBar.addEventListener(\"mousedown\", function (e) {\r\n  if (e.which === 1) {\r\n    //   console.log(e.offsetX, progressBarWidth);\r\n    //Tính tỷ lệ phần trăm giữa vị trí click với chiều rộng\r\n    rate = (e.offsetX * 100) / progressBarWidth;\r\n\r\n    //Update CSS vào progress\r\n    progress.style.width = `${rate}%`;\r\n\r\n    initalRate = rate;\r\n\r\n    isDrag = true;\r\n\r\n    initialClientX = e.clientX;\r\n\r\n    var currentTime = (audio.duration * rate) / 100;\r\n    currentTimeEl.innerText = getTime(currentTime);\r\n\r\n    audio.currentTime = currentTime;\r\n  }\r\n});\r\n\r\nprogressDot.addEventListener(\"mousedown\", function (e) {\r\n  e.stopPropagation();\r\n\r\n  if (e.which === 1) {\r\n    isDrag = true;\r\n    initialClientX = e.clientX;\r\n    //   console.log(initalRate);\r\n    //   console.log(\"progress dot\");\r\n  }\r\n});\r\n\r\ndocument.addEventListener(\"mousemove\", function (e) {\r\n  if (isDrag) {\r\n    var space = e.clientX - initialClientX;\r\n    // console.log(space);\r\n    rate = (space * 100) / progressBarWidth + initalRate;\r\n    if (rate < 0) {\r\n      rate = 0;\r\n    }\r\n\r\n    if (rate > 100) {\r\n      rate = 100;\r\n    }\r\n\r\n    progress.style.width = `${rate}%`;\r\n\r\n    var currentTime = (audio.duration * rate) / 100;\r\n    currentTimeEl.innerText = getTime(currentTime);\r\n  }\r\n});\r\n\r\ndocument.addEventListener(\"mouseup\", function () {\r\n  isDrag = false;\r\n  initalRate = rate;\r\n  var currentTime = (audio.duration * rate) / 100;\r\n  currentTimeEl.innerText = getTime(currentTime);\r\n\r\n  audio.currentTime = currentTime;\r\n});\r\n\r\n/*\r\nKhi bấm chuột xuống vào chấm màu tím\r\n- Lấy được clientX tại ví trí bấm chuột\r\n\r\nKhi kéo chuột\r\n- Lấy được clientX ở vị trí gần nhất (kéo đến đâu lấy vị trí ở đó)\r\n- Tính khoảng cách kéo: clientX mới nhất - clientX ban đầu khi click\r\n*/\r\n\r\nvar audio = document.querySelector(\".audio\");\r\nvar currentTimeEl = progressBar.previousElementSibling;\r\nvar durationTimeEl = progressBar.nextElementSibling;\r\nvar playBtn = document.querySelector(\".play-btn\");\r\n\r\nvar playIcon = `<i class=\"fa-solid fa-play\"></i>`;\r\nvar pauseIcon = `<i class=\"fa-solid fa-pause\"></i>`;\r\n\r\nvar getTime = function (seconds) {\r\n  var mins = Math.floor(seconds / 60);\r\n  seconds = Math.floor(seconds - mins * 60);\r\n  return `${mins < 10 ? \"0\" + mins : mins}:${\r\n    seconds < 10 ? \"0\" + seconds : seconds\r\n  }`;\r\n};\r\n\r\naudio.addEventListener(\"loadeddata\", function () {\r\n  //   console.log(audio.duration);\r\n  durationTimeEl.innerText = getTime(audio.duration);\r\n});\r\n\r\nplayBtn.addEventListener(\"click\", function (e) {\r\n  e.stopPropagation();\r\n  if (audio.paused) {\r\n    audio.play();\r\n    this.innerHTML = pauseIcon;\r\n  } else {\r\n    audio.pause();\r\n    this.innerHTML = playIcon;\r\n  }\r\n});\r\n\r\naudio.addEventListener(\"timeupdate\", function () {\r\n  if (!isDrag) {\r\n    //   console.log(\"đang chạy: \", this.currentTime);\r\n    currentTimeEl.innerText = getTime(this.currentTime);\r\n\r\n    //Tính tỷ lệ phần trăm\r\n    rate = (this.currentTime / this.duration) * 100;\r\n\r\n    //Update vào timer\r\n    progress.style.width = `${rate}%`;\r\n  }\r\n});\r\n\r\naudio.addEventListener(\"ended\", function () {\r\n  rate = 0;\r\n  audio.currentTime = 0;\r\n  progress.style.width = 0;\r\n  playBtn.innerHTML = playIcon;\r\n});\r\n\r\nprogressDot.addEventListener(\"mousemove\", function (e) {\r\n  e.stopPropagation();\r\n});\r\n\r\nprogressBar.addEventListener(\"mousemove\", function (e) {\r\n  timer.style.display = \"block\";\r\n  timer.style.left = `${e.offsetX}px`;\r\n  var rate = (e.offsetX * 100) / this.clientWidth;\r\n  var currentTime = (audio.duration * rate) / 100;\r\n  timer.innerText = getTime(currentTime);\r\n});\r\n\r\nprogressBar.addEventListener(\"mouseout\", function () {\r\n  timer.style.display = \"none\";\r\n});\r\n"],"names":["progressBar","document","querySelector","progress","progressDot","progressBarWidth","clientWidth","timer","isDrag","initialClientX","initalRate","rate","addEventListener","e","which","offsetX","style","width","clientX","currentTime","audio","duration","currentTimeEl","innerText","getTime","stopPropagation","space","previousElementSibling","durationTimeEl","nextElementSibling","playBtn","playIcon","seconds","mins","Math","floor","paused","play","innerHTML","pause","display","left"],"version":3,"file":"index.572545a4.js.map"}